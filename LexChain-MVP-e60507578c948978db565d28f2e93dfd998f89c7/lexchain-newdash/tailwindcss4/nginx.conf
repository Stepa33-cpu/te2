server {
    listen 80;
    server_name dashboard.lexchain.net;

    # Increase error log level
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Enable CORS
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    location /api/ {
        # Add debug logging
        error_log /var/log/nginx/api_error.log debug;
        access_log /var/log/nginx/api_access.log;

        proxy_pass http://backend:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;

        # Add error handling
        proxy_intercept_errors on;
        error_page 502 = @backend_down;
    }

    location @backend_down {
        return 502 '{"error": "Backend service unavailable", "details": "Unable to connect to backend service"}';
        add_header Content-Type application/json;
    }
} 